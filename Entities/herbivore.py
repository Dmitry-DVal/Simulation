from Entities.creature import Creature
from Entities.grass import Grass


class Herbivore(Creature):
    '''–ö–ª–∞—Å—Å —Ç—Ä–∞–≤–æ—è–¥–Ω—ã—Ö. –ó–∞–¥–∞—á–∞ –Ω–∞–π—Ç–∏ —Ç—Ä–∞–≤—É'''

    def __init__(self, coordinate: tuple[int, int], speed: int, hp: int, image: str = 'üêá'):
        super().__init__(coordinate, speed, hp, image, goal=Grass)

    def __str__(self):
        return '–ó–∞—è—Ü'

    def make_move(self, creature: 'Creature', first_peak: tuple[int, int], finish_peak: tuple[int, int],
                  level: int, counter, path: list[tuple, int, list], my_map, living_creatures, herbivoreHp,
                  predatorHp) -> list[
        tuple, int, list]:
        """"""
        print(f'{creature} –Ω–∞—à–µ–ª –¢—Ä–∞–≤—É, –ì–ª—É–±–∏–Ω–∞ = {level + 1}')
        print(f'{creature}, –≤–∞—à–∏ –∫–æ–Ω–µ—á–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã {finish_peak}')
        creature.hp = herbivoreHp
        my_map[first_peak], my_map[finish_peak] = None, creature
        creature.coordinate = finish_peak
        return path + [finish_peak]
